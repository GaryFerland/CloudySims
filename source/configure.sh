#!/bin/sh
comp="$*"
config="cloudyconfig.h"
rm -f $config
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
int sub()
{
    return 1;
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.o ]
then
    obj="o"
elif [ -r tmp_cloudyconfig.obj ]
then
    obj="obj"
else
    echo "no object file found, is the compiler working?"
    rm -rf tmp_cloudyconfig.*
    exit 1
fi
echo "// this file was generated by configure.sh." > $config
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
double sub(double x, long i)
{
    return powi(x,i);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POWI 1" >> $config
else
    echo "#undef HAVE_POWI" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
double sub(double x, int i)
{
    return pow(x,i);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_DOUBLE_INT 1" >> $config
else
    echo "#undef HAVE_POW_DOUBLE_INT" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
double sub(double x, long i)
{
    return pow(x,i);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_DOUBLE_LONG 1" >> $config
else
    echo "#undef HAVE_POW_DOUBLE_LONG" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
float sub(float x, int i)
{
    return pow(x,i);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_FLOAT_INT 1" >> $config
else
    echo "#undef HAVE_POW_FLOAT_INT" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
float sub(float x, long i)
{
    return pow(x,i);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_FLOAT_LONG 1" >> $config
else
    echo "#undef HAVE_POW_FLOAT_LONG" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
double sub(double x, float y)
{
    return pow(x,y);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_DOUBLE_FLOAT 1" >> $config
else
    echo "#undef HAVE_POW_DOUBLE_FLOAT" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <complex>
using namespace std;
double sub(float x, double y)
{
    return pow(x,y);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_POW_FLOAT_DOUBLE 1" >> $config
else
    echo "#undef HAVE_POW_FLOAT_DOUBLE" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cstdio>
using namespace std;
void sub()
{
    printf( "%s", __func__ );
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_FUNC 1" >> $config
else
    echo "#undef HAVE_FUNC" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
using namespace std;
double sub(double x)
{
    return erf(x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_ERF 1" >> $config
else
    echo "#undef HAVE_ERF" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
using namespace std;
double sub(double x)
{
    return erfc(x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_ERFC 1" >> $config
else
    echo "#undef HAVE_ERFC" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
using namespace std;
double sub(double x)
{
    double s,c;
    sincos(x,&s,&c);
    return s+c;
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_SINCOS 1" >> $config
else
    echo "#undef HAVE_SINCOS" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
using namespace std;
long long sub(long long x)
{
    return x+1LL;
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_LONG_LONG 1" >> $config
else
    echo "#undef HAVE_LONG_LONG" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cstring>
#include <cstdio>
using namespace std;
int main()
{
    const char* s = "some string";
    size_t n = strnlen(s,12);
    printf( "%ld\n", n );
    return 0;
}
EOF
$comp -o tmp_cloudyconfig.exe tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -e tmp_cloudyconfig.exe ]
then
    outp=$(./tmp_cloudyconfig.exe)
else
    outp="invalid"
fi
if [ "$outp" = "11" ]
then
    echo "#define HAVE_STRNLEN 1" >> $config
else
    echo "#undef HAVE_STRNLEN" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cmath>
#include <cstdio>
using namespace std;
int main()
{
    constexpr double d = sqrt(121.);
    printf( "%ld\n", (long) d );
    return 0;
}
EOF
$comp -o tmp_cloudyconfig.exe tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -e tmp_cloudyconfig.exe ]
then
    outp=$(./tmp_cloudyconfig.exe)
else
    outp="invalid"
fi
if [ "$outp" = "11" ]
then
    echo "#define HAVE_CONSTEXPR 1" >> $config
else
    echo "#undef HAVE_CONSTEXPR" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <cstdlib>
#include <climits>
#include <cstdio>
using namespace std;
void sub()
{
    char *ptr = realpath( ".", NULL );
    printf( "%s\n", ptr );
    free( ptr );
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_REALPATH 1" >> $config
else
    echo "#undef HAVE_REALPATH" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <immintrin.h>
using namespace std;
__m256d sub(__m256d x)
{
    return _mm256_mul_pd(x, x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_AVX_INTRIN 1" >> $config
else
    echo "#undef HAVE_AVX_INTRIN" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <immintrin.h>
using namespace std;
__m256d sub(__m256d x)
{
    return _mm256_fmadd_pd(x, x, x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_FMA_INTRIN 1" >> $config
else
    echo "#undef HAVE_FMA_INTRIN" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <immintrin.h>
using namespace std;
__m256i sub(__m128i x)
{
    return _mm256_cvtepi32_epi64(x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_AVX2_INTRIN 1" >> $config
else
    echo "#undef HAVE_AVX2_INTRIN" >> $config
fi
rm -rf tmp_cloudyconfig.*
cat >> tmp_cloudyconfig.cpp <<EOF
#include "cdstd.h"
#include <immintrin.h>
using namespace std;
__m512d sub(__m512d x)
{
    return _mm512_mul_pd(x, x);
}
EOF
$comp -c tmp_cloudyconfig.cpp > tmp_cloudyconfig.err 2>&1
if [ -r tmp_cloudyconfig.$obj ]
then
    echo "#define HAVE_AVX512F_INTRIN 1" >> $config
else
    echo "#undef HAVE_AVX512F_INTRIN" >> $config
fi
rm -rf tmp_cloudyconfig.*
